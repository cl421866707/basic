<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.chenlong.basic.dao.PermsMapper">
  <resultMap id="BaseResultMap" type="cn.chenlong.basic.model.Perms">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="perm_name" jdbcType="VARCHAR" property="permName" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="delete_time" jdbcType="TIMESTAMP" property="deleteTime" />
    <result column="backp1" jdbcType="VARCHAR" property="backp1" />
    <result column="backp2" jdbcType="VARCHAR" property="backp2" />
    <result column="backp3" jdbcType="VARCHAR" property="backp3" />
    <result column="backp4" jdbcType="VARCHAR" property="backp4" />
    <result column="backp5" jdbcType="VARCHAR" property="backp5" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, perm_name, create_time, update_time, delete_time, backp1, backp2, backp3, backp4, 
    backp5
  </sql>
  <select id="selectByExample" parameterType="cn.chenlong.basic.model.PermsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from perms
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from perms
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from perms
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="cn.chenlong.basic.model.PermsExample">
    delete from perms
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.chenlong.basic.model.Perms">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into perms (perm_name, create_time, update_time, 
      delete_time, backp1, backp2, 
      backp3, backp4, backp5
      )
    values (#{permName,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{deleteTime,jdbcType=TIMESTAMP}, #{backp1,jdbcType=VARCHAR}, #{backp2,jdbcType=VARCHAR}, 
      #{backp3,jdbcType=VARCHAR}, #{backp4,jdbcType=VARCHAR}, #{backp5,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.chenlong.basic.model.Perms">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into perms
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="permName != null">
        perm_name,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="deleteTime != null">
        delete_time,
      </if>
      <if test="backp1 != null">
        backp1,
      </if>
      <if test="backp2 != null">
        backp2,
      </if>
      <if test="backp3 != null">
        backp3,
      </if>
      <if test="backp4 != null">
        backp4,
      </if>
      <if test="backp5 != null">
        backp5,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="permName != null">
        #{permName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleteTime != null">
        #{deleteTime,jdbcType=TIMESTAMP},
      </if>
      <if test="backp1 != null">
        #{backp1,jdbcType=VARCHAR},
      </if>
      <if test="backp2 != null">
        #{backp2,jdbcType=VARCHAR},
      </if>
      <if test="backp3 != null">
        #{backp3,jdbcType=VARCHAR},
      </if>
      <if test="backp4 != null">
        #{backp4,jdbcType=VARCHAR},
      </if>
      <if test="backp5 != null">
        #{backp5,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.chenlong.basic.model.PermsExample" resultType="java.lang.Long">
    select count(*) from perms
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update perms
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.permName != null">
        perm_name = #{record.permName,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.deleteTime != null">
        delete_time = #{record.deleteTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.backp1 != null">
        backp1 = #{record.backp1,jdbcType=VARCHAR},
      </if>
      <if test="record.backp2 != null">
        backp2 = #{record.backp2,jdbcType=VARCHAR},
      </if>
      <if test="record.backp3 != null">
        backp3 = #{record.backp3,jdbcType=VARCHAR},
      </if>
      <if test="record.backp4 != null">
        backp4 = #{record.backp4,jdbcType=VARCHAR},
      </if>
      <if test="record.backp5 != null">
        backp5 = #{record.backp5,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update perms
    set id = #{record.id,jdbcType=BIGINT},
      perm_name = #{record.permName,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      delete_time = #{record.deleteTime,jdbcType=TIMESTAMP},
      backp1 = #{record.backp1,jdbcType=VARCHAR},
      backp2 = #{record.backp2,jdbcType=VARCHAR},
      backp3 = #{record.backp3,jdbcType=VARCHAR},
      backp4 = #{record.backp4,jdbcType=VARCHAR},
      backp5 = #{record.backp5,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.chenlong.basic.model.Perms">
    update perms
    <set>
      <if test="permName != null">
        perm_name = #{permName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleteTime != null">
        delete_time = #{deleteTime,jdbcType=TIMESTAMP},
      </if>
      <if test="backp1 != null">
        backp1 = #{backp1,jdbcType=VARCHAR},
      </if>
      <if test="backp2 != null">
        backp2 = #{backp2,jdbcType=VARCHAR},
      </if>
      <if test="backp3 != null">
        backp3 = #{backp3,jdbcType=VARCHAR},
      </if>
      <if test="backp4 != null">
        backp4 = #{backp4,jdbcType=VARCHAR},
      </if>
      <if test="backp5 != null">
        backp5 = #{backp5,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.chenlong.basic.model.Perms">
    update perms
    set perm_name = #{permName,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      delete_time = #{deleteTime,jdbcType=TIMESTAMP},
      backp1 = #{backp1,jdbcType=VARCHAR},
      backp2 = #{backp2,jdbcType=VARCHAR},
      backp3 = #{backp3,jdbcType=VARCHAR},
      backp4 = #{backp4,jdbcType=VARCHAR},
      backp5 = #{backp5,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>